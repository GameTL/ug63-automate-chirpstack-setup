[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ug63-automate-chirpstack-setup"
version = "1.0.0"
description = "Automated browser bot for configuring multiple UG63 LoRaWAN gateways with ChirpStack settings"
readme = "README.md"
requires-python = ">=3.8.1"
license = {text = "MIT"}
authors = [
    {name = "Gateway Config Bot", email = "admin@example.com"},
]
keywords = ["lorawan", "gateway", "automation", "chirpstack", "ug63"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
]

dependencies = [
    "playwright>=1.40.0",
    "click>=8.1.7",
    "colorama>=0.4.6",
    "psutil>=5.9.6",
    "pyyaml>=6.0.1",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/ug63-automate-chirpstack-setup"
Repository = "https://github.com/yourusername/ug63-automate-chirpstack-setup"
Issues = "https://github.com/yourusername/ug63-automate-chirpstack-setup/issues"

[project.scripts]
ug63-config = "gateway_config_bot:main"
ug63-test = "test_setup:cli_main"

[tool.hatch.build.targets.wheel]
packages = ["."]
include = [
    "gateway_config_bot.py",
    "test_setup.py",
    "setup.py",
    "config.yaml",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]

[tool.coverage.run]
source = ["gateway_config_bot"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
